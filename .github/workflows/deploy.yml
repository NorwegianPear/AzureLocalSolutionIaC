name: Deploy to Azure
run-name: ${{ github.actor }} started deployment AVD and AKS with GitHub Actions

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

defaults: 
  run:
    shell: pwsh

env:
  TenantID: ${{ secrets.TENANT_ID }}
  AppID: ${{ secrets.AZURELOCALSOLUTIONIAC_CLIENTID }}
  Subscription: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  Location: 'norwayeast'
  aks-resourceGroupName: 'aks-kubernetes-arc-rg'
  KeyVaultName: '-kv'
  aksCluster1ClientID: ${{ secrets.COOLAKSCLUSTER1_CLIENTID }}
  aksCluster1Secret: ${{ secrets.COOLAKSCLUSTER1_SECRET }}
  aksCluster2ClientID: ${{ secrets.COOLAKSCLUSTER2_CLIENTID }}
  aksCluster2Secret: ${{ secrets.COOLAKSCLUSTER2_SECRET }}
  
jobs:
  dev:
    runs-on: ubuntu-latest
    environment: dev
    env:
      environmentName: dev

    steps:
    - name: ðŸ¤‘ðŸ’¸Checkout parameter
      uses: actions/checkout@v3

    - name: Install Azure module to resolve Token issue
      uses: ./.github/actions/az-install
      with:
        version: 11.6.0          # This version of PS remediates the OIDC token expiry issue - #10249

    - name: ðŸ¥³ Connect to Azure
      id: azure-login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURELOCALSOLUTIONIAC_CLIENTID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true

    - name: Install PowerShell Modules
      shell: pwsh
      run: |
        Install-Module Az.Accounts -Force
        Install-Module Az.Resources -Force
        Install-Module Az.Network -Force
        Install-Module Az.Compute -Force
        Install-Module -Name AzureAD -Force -AllowClobber
        Install-Module -Name Microsoft.PowerShell.SecretManagement -Repository PSGallery -Force
        Install-Module Az.KeyVault -Repository PSGallery -Force

    - name: Deploy Bicep
      shell: pwsh
      run: |
        New-AzSubscriptionDeployment -Name "Deployment-DEV-${{ github.actor }}-$(get-random)" `
          -TemplateFile "bicep/main.bicep" `
          -resourceGroupName "${{ env.aks-resourceGroupName }}-${{ env.environmentName }}" `
          -aksCluster1ClientID "${{ env.aksCluster1ClientID }}" `
          -aksCluster1Secret "${{ env.aksCluster1Secret }}" `
          -aksCluster2ClientID "${{ env.aksCluster2ClientID }}" `
          -aksCluster2Secret "${{ env.aksCluster2Secret }}" `
          -subscriptionId "${{ secrets.AZURE_SUBSCRIPTION_ID }}" `
          -TemplateParameterFile "json/aks.json" `
          -location "${{ env.Location }}" `
          -tenantId "${{ secrets.AZURE_TENANT_ID }}"

